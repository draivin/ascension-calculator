{"version":3,"sources":["dataset/index.js","state/util.js","state/CalculatorContext.js","components/NodeTooltip.js","components/Node.js","components/Cluster.js","components/Embodiment.js","components/Overview.js","App.js","index.js"],"names":["ascensionData","require","EMBODIMENT_NAMES","CLUSTERS","root","nodes","rewards","EMBODIMENTS","forEach","embodiment","description","toUpperCase","substring","cluster","name","push","isNodeSelected","node","state","index","isNodeSelectable","clusterAvailable","isClusterAvailable","getNodeId","isClusterComplete","i","length","requirements","points","CalculatorContext","React","createContext","BONUS_REGEX","getBonusPoint","subnode","bonusPoint","match","subnodes","toLowerCase","reducer","type","nodeId","newNodes","newPoints","isNodeDeselectable","prevBonusPoint","clusterNames","split","clusterName","isValidState","CalculatorProvider","children","useReducer","force","entropy","form","inertia","life","dispatch","Provider","value","NodeTooltip","subnodeDescriptions","trim","tooltipHtml","ReactDOMServer","renderToStaticMarkup","Node","useContext","nodeInfo","isSelected","isSelectable","selectedSubnode","getSelectedSubnode","handler","subnodeElements","className","classNames","selected","onClick","data-tip","selectable","Cluster","isAvailable","isComplete","available","complete","Embodiment","clusters","VALUE_MODIFIER_REGEX","categories","header","regex","Overview","modifiers","valueModifiers","textModifiers","addModifier","line","map","s","modifier","Number","Object","keys","Math","round","collectModifiers","modifiersByCategory","c","otherModifiers","hasCategory","category","categoryElements","m","App","effect","html","multiline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24fdf775.chunk.js","sourcesContent":["const ascensionData = require('./ascension.json');\r\n\r\nexport const EMBODIMENT_NAMES = ['force', 'entropy', 'form', 'inertia', 'life'];\r\nexport const CLUSTERS = { root: { nodes: {}, rewards: {} } };\r\nexport const EMBODIMENTS = {};\r\n\r\nEMBODIMENT_NAMES.forEach(\r\n  (embodiment) =>\r\n    (CLUSTERS.root.nodes[embodiment] = {\r\n      description: `+1 ${embodiment[0].toUpperCase()}${embodiment.substring(1)}.`,\r\n    })\r\n);\r\nEMBODIMENT_NAMES.forEach((embodiment) => (EMBODIMENTS[embodiment] = []));\r\n\r\nfor (let cluster of ascensionData) {\r\n  CLUSTERS[cluster.name] = cluster;\r\n  EMBODIMENTS[cluster.embodiment].push(cluster);\r\n}\r\n","import { CLUSTERS } from '../dataset';\r\n\r\nexport function isNodeSelected(node, state) {\r\n  return `${node.cluster}.${node.index}` in state.nodes;\r\n}\r\n\r\nexport function isNodeSelectable(node, state) {\r\n  if (node.cluster == 'root') return true;\r\n\r\n  const cluster = CLUSTERS[node.cluster];\r\n  const clusterAvailable = isClusterAvailable(cluster, state);\r\n  return (\r\n    (clusterAvailable && node.index == 0) ||\r\n    (clusterAvailable && isNodeSelected({ ...node, index: node.index - 1 }, state))\r\n  );\r\n}\r\n\r\nexport function isNodeDeselectable(node, state) {\r\n  return !isNodeSelected({ ...node, index: node.index + 1 }, state);\r\n}\r\n\r\nexport function getNodeId(node) {\r\n  return `${node.cluster}.${node.index}`;\r\n}\r\n\r\nexport function getSelectedSubnode(node, state) {\r\n  return state.nodes[getNodeId(node)];\r\n}\r\n\r\nexport function isClusterComplete(cluster, state) {\r\n  for (let i = 0; i < cluster.nodes.length; i++) {\r\n    if (!isNodeSelected({ cluster: cluster.name, index: i }, state)) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function isClusterAvailable(cluster, state) {\r\n  for (let embodiment in cluster.requirements) {\r\n    if (state.points[embodiment] < cluster.requirements[embodiment]) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function isValidState({ nodes, points }) {\r\n  let clusterNames = {};\r\n  for (let nodeId in nodes) {\r\n    clusterNames[nodeId.split('.')[0]] = true;\r\n  }\r\n\r\n  for (let clusterName in clusterNames) {\r\n    const cluster = CLUSTERS[clusterName];\r\n    for (let embodiment in cluster.requirements) {\r\n      if (points[embodiment] < cluster.requirements[embodiment]) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n","import React, { useReducer } from 'react';\r\nimport { CLUSTERS } from '../dataset';\r\nimport {\r\n  isNodeSelectable,\r\n  isClusterComplete,\r\n  isNodeDeselectable,\r\n  isValidState,\r\n  getNodeId,\r\n} from './util';\r\n\r\nexport const CalculatorContext = React.createContext(null);\r\n\r\nconst BONUS_REGEX = /\\+1 (Force|Entropy|Form|Inertia|Life)./;\r\n\r\nfunction getBonusPoint({ cluster, index, subnode }) {\r\n  const node = CLUSTERS[cluster].nodes[index];\r\n\r\n  let bonusPoint = null;\r\n  let match = node.description.match(BONUS_REGEX);\r\n  if (subnode != -1 && !match) match = node.subnodes[subnode].match(BONUS_REGEX);\r\n  if (match) bonusPoint = match[1].toLowerCase();\r\n\r\n  return bonusPoint;\r\n}\r\n\r\nfunction reducer(state, { type, node }) {\r\n  const nodeId = getNodeId(node);\r\n  const cluster = CLUSTERS[node.cluster];\r\n\r\n  const newNodes = { ...state.nodes };\r\n  const newPoints = { ...state.points };\r\n\r\n  const bonusPoint = getBonusPoint(node);\r\n\r\n  switch (type) {\r\n    case 'select':\r\n      if (!isNodeSelectable(node, state)) break;\r\n      newNodes[nodeId] = node.subnode;\r\n\r\n      if (isClusterComplete(cluster, { ...state, nodes: newNodes })) {\r\n        for (let embodiment in cluster.rewards) {\r\n          newPoints[embodiment] += cluster.rewards[embodiment];\r\n        }\r\n      }\r\n\r\n      if (bonusPoint) newPoints[bonusPoint] += 1;\r\n\r\n      break;\r\n\r\n    case 'deselect':\r\n      if (!isNodeDeselectable(node, state)) break;\r\n\r\n      if (cluster && isClusterComplete(cluster, { ...state, nodes: newNodes })) {\r\n        for (let embodiment in cluster.rewards) {\r\n          newPoints[embodiment] -= cluster.rewards[embodiment];\r\n        }\r\n      }\r\n\r\n      if (bonusPoint) newPoints[bonusPoint] -= 1;\r\n\r\n      delete newNodes[nodeId];\r\n      break;\r\n\r\n    case 'reselect':\r\n      const prevBonusPoint = getBonusPoint({ ...node, subnode: state.nodes[nodeId] });\r\n      if (bonusPoint) newPoints[bonusPoint] += 1;\r\n      if (prevBonusPoint) newPoints[prevBonusPoint] -= 1;\r\n\r\n      newNodes[nodeId] = node.subnode;\r\n      break;\r\n  }\r\n\r\n  if (!isValidState({ nodes: newNodes, points: newPoints })) return state;\r\n  return { nodes: newNodes, points: newPoints };\r\n}\r\n\r\nexport function CalculatorProvider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    nodes: {},\r\n    points: {\r\n      force: 0,\r\n      entropy: 0,\r\n      form: 0,\r\n      inertia: 0,\r\n      life: 0,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <CalculatorContext.Provider value={{ state, dispatch }}>{children}</CalculatorContext.Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport { CLUSTERS } from '../dataset';\r\n\r\nexport function NodeTooltip({ cluster, index }) {\r\n  const node = CLUSTERS[cluster].nodes[index];\r\n  const subnodes = node.subnodes;\r\n\r\n  const description = node.description;\r\n  const subnodeDescriptions = [];\r\n\r\n  if (subnodes && subnodes.length) {\r\n    for (let i = 0; i < subnodes.length; i++) {\r\n      subnodeDescriptions.push(\r\n        <div>\r\n          {i + 1}) {subnodes[i].trim()}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>{description}</div>\r\n      {subnodeDescriptions}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function tooltipHtml({ cluster, index }) {\r\n  return ReactDOMServer.renderToStaticMarkup(<NodeTooltip cluster={cluster} index={index} />);\r\n}\r\n","import React, { useContext } from 'react';\r\nimport classNames from 'classnames';\r\nimport { CalculatorContext } from '../state/CalculatorContext';\r\nimport { isNodeSelected, isNodeSelectable, getSelectedSubnode } from '../state/util';\r\nimport { CLUSTERS } from '../dataset';\r\nimport { tooltipHtml } from './NodeTooltip';\r\n\r\nexport function Node({ cluster, index }) {\r\n  const { state, dispatch } = useContext(CalculatorContext);\r\n\r\n  const nodeInfo = { cluster, index };\r\n  const isSelected = isNodeSelected(nodeInfo, state);\r\n  const isSelectable = !isSelected && isNodeSelectable(nodeInfo, state);\r\n  const selectedSubnode = isSelected && getSelectedSubnode(nodeInfo, state);\r\n\r\n  const node = CLUSTERS[cluster].nodes[index];\r\n\r\n  function handler(subnode) {\r\n    if (!isSelected) {\r\n      dispatch({\r\n        type: 'select',\r\n        node: { subnode, ...nodeInfo },\r\n      });\r\n    } else if (subnode != selectedSubnode) {\r\n      dispatch({\r\n        type: 'reselect',\r\n        node: { subnode, ...nodeInfo },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: 'deselect',\r\n        node: { subnode, ...nodeInfo },\r\n      });\r\n    }\r\n  }\r\n\r\n  if (node.subnodes && node.subnodes.length) {\r\n    const subnodeElements = [];\r\n    for (let i = 0; i < node.subnodes.length; i++) {\r\n      subnodeElements.push(\r\n        <div\r\n          className={classNames('subnode', { selected: isSelected && selectedSubnode == i })}\r\n          onClick={() => handler(i)}\r\n        >\r\n          {i + 1}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div\r\n        data-tip={tooltipHtml(nodeInfo)}\r\n        className={classNames('node subnodes', { selected: isSelected, selectable: isSelectable })}\r\n      >\r\n        {subnodeElements}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div\r\n        data-tip={tooltipHtml(nodeInfo)}\r\n        className={classNames('node', { selected: isSelected, selectable: isSelectable })}\r\n        onClick={() => handler(-1)}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n","import React, { useContext } from 'react';\r\nimport classNames from 'classnames';\r\nimport { Node } from './Node';\r\nimport { CLUSTERS } from '../dataset';\r\nimport { CalculatorContext } from '../state/CalculatorContext';\r\nimport { isClusterAvailable, isClusterComplete } from '../state/util';\r\n\r\nexport function Cluster({ name }) {\r\n  const { state } = useContext(CalculatorContext);\r\n\r\n  const cluster = CLUSTERS[name];\r\n  const isAvailable = isClusterAvailable(cluster, state);\r\n  const isComplete = isAvailable && isClusterComplete(cluster, state);\r\n\r\n  const requirements = [];\r\n  for (let embodiment in cluster.requirements) {\r\n    requirements.push(\r\n      <div className={`point ${embodiment}`}>{cluster.requirements[embodiment]}</div>\r\n    );\r\n  }\r\n\r\n  const rewards = [];\r\n  for (let embodiment in cluster.rewards) {\r\n    rewards.push(<div className={`point ${embodiment}`}>{cluster.rewards[embodiment]}</div>);\r\n  }\r\n\r\n  const nodes = [];\r\n  for (let i = 0; i < cluster.nodes.length; i++) {\r\n    nodes.push(<Node cluster={name} index={i} />);\r\n  }\r\n\r\n  return (\r\n    <div className={classNames('cluster', { available: isAvailable, complete: isComplete })}>\r\n      <div className=\"requirements points\">{requirements}</div>\r\n      <div className=\"cluster-name\"> {name} </div>\r\n      <div className=\"rewards points\">{rewards}</div>\r\n      <div className=\"nodes\">{nodes}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Node } from './Node';\r\nimport { Cluster } from './Cluster';\r\nimport { EMBODIMENTS } from '../dataset';\r\n\r\nexport function Embodiment({ name }) {\r\n  const clusters = [];\r\n  const embodiment = EMBODIMENTS[name];\r\n\r\n  for (let cluster of embodiment) {\r\n    clusters.push(<Cluster name={cluster.name} />);\r\n  }\r\n\r\n  return (\r\n    <div className=\"embodiment\">\r\n      <div className=\"embodiment-name\">\r\n        {name}\r\n        <Node cluster=\"root\" index={name} />\r\n      </div>\r\n      <div className=\"clusters\">{clusters}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\nimport { CalculatorContext } from '../state/CalculatorContext';\nimport { EMBODIMENT_NAMES, CLUSTERS } from '../dataset';\n\nconst VALUE_MODIFIER_REGEX = /^\\+([\\d.]+)(.*)/;\n\nconst categories = [\n  {\n    header: 'Attributes',\n    regex: /^\\+\\d+(% invested)? (strength|constitution|power|finesse|wits|memory)\\./,\n  },\n  {\n    header: 'Skills',\n    regex: /^\\+\\d+ (ranged|single-handed|two-handed|leadership|perseverance|retribution|aerotheurge|geomancer|huntsman|hydrosophist|necromancer|polymorph|pyrokinetic|scoundrel|summoning|warfare|sourcery)\\./,\n  },\n  {\n    header: 'Stats',\n    regex: /^\\+[\\d.]+%? (initiative|critical chance|accuracy|damage|movement speed|lifesteal|maximum vitality|dodge chance)\\./,\n  },\n  {\n    header: 'Resistances',\n    regex: /^\\+\\d+% ((water|fire|air|earth|poison|physical|piercing) resistance|to elemental resistances)\\./,\n  },\n  {\n    header: 'Summons',\n    regex: /^\\+[\\d.]+%? summon \\w+( \\w+)?\\./,\n  },\n  {\n    header: 'Embodiments',\n    regex: /^\\+\\d+ (force|entropy|form|inertia|life)\\./,\n  },\n  {\n    header: 'Predator',\n    regex: /predator/,\n  },\n  {\n    header: 'Voracity',\n    regex: /voracity/,\n  },\n  {\n    header: 'Elementalist',\n    regex: /elementalist/,\n  },\n];\n\nfunction collectModifiers(state) {\n  const valueModifiers = {};\n  const textModifiers = [];\n\n  function addModifier(line) {\n    line\n      .split('\\n» ')\n      .map((s) => s.trim())\n      .forEach((modifier) => {\n        let match = modifier.match(VALUE_MODIFIER_REGEX);\n        if (match) {\n          const description = match[2];\n          const value = Number(match[1]);\n          valueModifiers[description] = (valueModifiers[description] || 0) + value;\n        } else {\n          textModifiers.push(modifier);\n        }\n      });\n  }\n\n  for (let nodeId in state.nodes) {\n    let [cluster, index] = nodeId.split('.');\n\n    const node = CLUSTERS[cluster].nodes[index];\n    const subnode = state.nodes[nodeId];\n\n    const modifier = node.description.trim();\n\n    if (modifier) addModifier(modifier);\n    if (subnode != -1) {\n      addModifier(node.subnodes[subnode]);\n    }\n  }\n\n  const modifiers = [];\n\n  for (let description of Object.keys(valueModifiers)) {\n    let value = valueModifiers[description];\n    modifiers.push(`+${Math.round(value * 10) / 10}${description}`);\n  }\n\n  modifiers.push(...textModifiers);\n\n  return modifiers;\n}\n\nexport function Overview() {\n  const { state } = useContext(CalculatorContext);\n\n  const points = [];\n  for (let embodiment of EMBODIMENT_NAMES) {\n    points.push(<div className={`point ${embodiment}`}>{state.points[embodiment]}</div>);\n  }\n\n  const modifiers = collectModifiers(state);\n  let modifiersByCategory = categories.map((c) => []);\n  const otherModifiers = [];\n\n  for (let modifier of modifiers) {\n    let hasCategory = false;\n\n    for (let i = 0; i < categories.length; i++) {\n      const category = categories[i];\n\n      if (modifier.toLowerCase().match(category.regex)) {\n        hasCategory = true;\n        modifiersByCategory[i].push(modifier);\n        break;\n      }\n    }\n\n    if (!hasCategory) {\n      otherModifiers.push(modifier);\n    }\n  }\n\n  const categoryElements = [];\n  for (let i = 0; i < categories.length; i++) {\n    const category = categories[i];\n\n    if (modifiersByCategory[i].length) {\n      categoryElements.push(\n        <div className=\"category\">\n          <div className=\"category-header\">{category.header}:</div>\n          {modifiersByCategory[i].map((m) => (\n            <div>{m}</div>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  if (otherModifiers.length) {\n    categoryElements.push(\n      <div className=\"category\">\n        <div className=\"category-header\">Other bonuses:</div>\n        {otherModifiers.map((m) => (\n          <div>{m}</div>\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"overview\">\n      <div className=\"total-points points\">\n        <div className=\"points-name\">Available Ascension:</div> {points}\n      </div>\n      <div className=\"points-used\">Points used: {Object.keys(state.nodes).length}</div>\n\n      <div className=\"description\">\n        <div className=\"description-title\">Bonuses overview:</div>\n        {categoryElements}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport ReactTooltip from 'react-tooltip';\nimport { CalculatorProvider } from './state/CalculatorContext';\nimport { EMBODIMENT_NAMES } from './dataset';\nimport { Embodiment } from './components/Embodiment';\nimport { Overview } from './components/Overview';\n\nfunction App() {\n  return (\n    <CalculatorProvider>\n      <div className=\"calculator\">\n        <div className=\"embodiments\">\n          {EMBODIMENT_NAMES.map((embodiment) => (\n            <Embodiment name={embodiment} />\n          ))}\n        </div>\n        <Overview />\n      </div>\n      <ReactTooltip className=\"tooltip\" effect=\"solid\" html={true} multiline={true} />\n    </CalculatorProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}