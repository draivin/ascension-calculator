{"version":3,"sources":["dataset/index.js","state/util.js","state/reducers/selection.js","state/reducers/index.js","state/CalculatorContext.js","components/NodeTooltip.js","components/Node.js","components/Cluster.js","components/Embodiment.js","components/SearchBox.js","components/Overview.js","App.js","index.js"],"names":["ascensionData","require","EMBODIMENT_NAMES","CLUSTERS","root","nodes","rewards","EMBODIMENTS","forEach","embodiment","description","toUpperCase","substring","cluster","name","push","isNodeSelected","node","state","index","isNodeSelectable","clusterAvailable","isClusterAvailable","getNodeId","isClusterComplete","i","length","requirements","points","BONUS_REGEX","getBonusPoint","subnode","bonusPoint","match","subnodes","toLowerCase","reducer","type","nodeId","newNodes","newPoints","isNodeDeselectable","prevBonusPoint","clusterNames","split","clusterName","isValidState","payload","selectionReducer","filter","CalculatorContext","React","createContext","CalculatorProvider","children","useReducer","force","entropy","form","inertia","life","dispatch","Provider","value","NodeTooltip","descriptionLines","replace","subnodeDescriptions","subnodeLines","className","map","line","tooltipHtml","ReactDOMServer","renderToStaticMarkup","Node","useContext","nodeInfo","isSelected","isSelectable","selectedSubnode","getSelectedSubnode","text","join","matchesFilter","includes","handler","classNames","selected","selectable","filtered","subnodeElements","onClick","data-tip","Cluster","isAvailable","isComplete","available","complete","Embodiment","clusters","SearchBox","onChange","e","target","VALUE_MODIFIER_REGEX","categories","header","regex","Overview","modifiers","valueModifiers","textModifiers","addModifier","s","trim","modifier","Number","Object","keys","Math","round","collectModifiers","modifiersByCategory","c","otherModifiers","hasCategory","category","categoryElements","m","App","effect","html","multiline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6q5EAAMA,EAAgBC,EAAQ,IAEjBC,EAAmB,CAAC,QAAS,UAAW,OAAQ,UAAW,QAC3DC,EAAW,CAAEC,KAAM,CAAEC,MAAO,GAAIC,QAAS,KACzCC,EAAc,GAE3BL,EAAiBM,SACf,SAACC,GAAD,OACGN,EAASC,KAAKC,MAAMI,GAAc,CACjCC,YAAY,MAAD,OAAQD,EAAW,GAAGE,eAAtB,OAAsCF,EAAWG,UAAU,GAA3D,SAGjBV,EAAiBM,SAAQ,SAACC,GAAD,OAAiBF,EAAYE,GAAc,M,oBAEhDT,G,IAApB,2BAAmC,CAAC,IAA3Ba,EAA0B,QACjCV,EAASU,EAAQC,MAAQD,EACzBN,EAAYM,EAAQJ,YAAYM,KAAKF,I,8BCdhC,SAASG,EAAeC,EAAMC,GACnC,MAAO,UAAGD,EAAKJ,QAAR,YAAmBI,EAAKE,SAAWD,EAAMb,MAG3C,SAASe,EAAiBH,EAAMC,GACrC,GAAoB,QAAhBD,EAAKJ,QAAmB,OAAO,EAEnC,IACMQ,EAAmBC,EADTnB,EAASc,EAAKJ,SACuBK,GACrD,OACGG,GAAkC,GAAdJ,EAAKE,OACzBE,GAAoBL,EAAe,2BAAKC,GAAN,IAAYE,MAAOF,EAAKE,MAAQ,IAAKD,GAQrE,SAASK,EAAUN,GACxB,MAAM,GAAN,OAAUA,EAAKJ,QAAf,YAA0BI,EAAKE,OAO1B,SAASK,EAAkBX,EAASK,GACzC,IAAK,IAAIO,EAAI,EAAGA,EAAIZ,EAAQR,MAAMqB,OAAQD,IACxC,IAAKT,EAAe,CAAEH,QAASA,EAAQC,KAAMK,MAAOM,GAAKP,GAAQ,OAAO,EAG1E,OAAO,EAGF,SAASI,EAAmBT,EAASK,GAC1C,IAAK,IAAIT,KAAcI,EAAQc,aAC7B,GAAIT,EAAMU,OAAOnB,GAAcI,EAAQc,aAAalB,GAAa,OAAO,EAG1E,OAAO,ECjCT,IAAMoB,EAAc,yCAEpB,SAASC,EAAT,GAAqD,IAA5BjB,EAA2B,EAA3BA,QAASM,EAAkB,EAAlBA,MAAOY,EAAW,EAAXA,QACjCd,EAAOd,EAASU,GAASR,MAAMc,GAEjCa,EAAa,KACbC,EAAQhB,EAAKP,YAAYuB,MAAMJ,GAInC,OAHgB,GAAZE,GAAkBE,IAAOA,EAAQhB,EAAKiB,SAASH,GAASE,MAAMJ,IAC9DI,IAAOD,EAAaC,EAAM,GAAGE,eAE1BH,EAGF,SAASI,EAAQlB,EAAjB,GAAyC,IAAfmB,EAAc,EAAdA,KAAMpB,EAAQ,EAARA,KAC/BqB,EAASf,EAAUN,GACnBJ,EAAUV,EAASc,EAAKJ,SAExB0B,EAAQ,eAAQrB,EAAMb,OACtBmC,EAAS,eAAQtB,EAAMU,QAEvBI,EAAaF,EAAcb,GAEjC,OAAQoB,GACN,IAAK,SACH,IAAKjB,EAAiBH,EAAMC,GAAQ,MAGpC,GAFAqB,EAASD,GAAUrB,EAAKc,QAEpBP,EAAkBX,EAAD,YAAC,eAAcK,GAAf,IAAsBb,MAAOkC,KAChD,IAAK,IAAI9B,KAAcI,EAAQP,QAC7BkC,EAAU/B,IAAeI,EAAQP,QAAQG,GAIzCuB,IAAYQ,EAAUR,IAAe,GAEzC,MAEF,IAAK,WACH,ID9BC,SAA4Bf,EAAMC,GACvC,OAAQF,EAAe,2BAAKC,GAAN,IAAYE,MAAOF,EAAKE,MAAQ,IAAKD,GC6BlDuB,CAAmBxB,EAAMC,GAAQ,MAEtC,GAAIL,GAAWW,EAAkBX,EAAD,YAAC,eAAcK,GAAf,IAAsBb,MAAOkC,KAC3D,IAAK,IAAI9B,KAAcI,EAAQP,QAC7BkC,EAAU/B,IAAeI,EAAQP,QAAQG,GAIzCuB,IAAYQ,EAAUR,IAAe,UAElCO,EAASD,GAChB,MAEF,IAAK,WACH,IAAMI,EAAiBZ,EAAc,2BAAKb,GAAN,IAAYc,QAASb,EAAMb,MAAMiC,MACjEN,IAAYQ,EAAUR,IAAe,GACrCU,IAAgBF,EAAUE,IAAmB,GAEjDH,EAASD,GAAUrB,EAAKc,QAI5B,ODxBK,YAA0C,IAAlB1B,EAAiB,EAAjBA,MAAOuB,EAAU,EAAVA,OAChCe,EAAe,GACnB,IAAK,IAAIL,KAAUjC,EACjBsC,EAAaL,EAAOM,MAAM,KAAK,KAAM,EAGvC,IAAK,IAAIC,KAAeF,EAAc,CACpC,IAAM9B,EAAUV,EAAS0C,GACzB,IAAK,IAAIpC,KAAcI,EAAQc,aAC7B,GAAIC,EAAOnB,GAAcI,EAAQc,aAAalB,GAC5C,OAAO,EAKb,OAAO,ECSFqC,CAAa,CAAEzC,MAAOkC,EAAUX,OAAQY,IACtC,2BAAKtB,GAAZ,IAAmBb,MAAOkC,EAAUX,OAAQY,IADsBtB,ECnE7D,SAASkB,EAAQlB,EAAO6B,GAC7B,OAAQA,EAAQV,MACd,IAAK,SACL,IAAK,WACL,IAAK,WACH,OAAOW,EAAiB9B,EAAO6B,GAEjC,IAAK,SACH,OAAO,2BAAK7B,GAAZ,IAAmB+B,OAAQF,EAAQE,OAAOd,iBCPzC,IAAMe,EAAoBC,IAAMC,cAAc,MAE9C,SAASC,EAAT,GAA2C,IAAbC,EAAY,EAAZA,SAAY,EACrBC,qBAAWnB,EAAS,CAC5C/B,MAAO,GACPuB,OAAQ,CACN4B,MAAO,EACPC,QAAS,EACTC,KAAM,EACNC,QAAS,EACTC,KAAM,GAERX,OAAQ,KAVqC,mBACxC/B,EADwC,KACjC2C,EADiC,KAa/C,OACE,kBAACX,EAAkBY,SAAnB,CAA4BC,MAAO,CAAE7C,QAAO2C,aAAaP,G,oCCftD,SAASU,EAAT,GAA0C,IAAnBnD,EAAkB,EAAlBA,QAASM,EAAS,EAATA,MAC/BF,EAAOd,EAASU,GAASR,MAAMc,GAC/Be,EAAWjB,EAAKiB,SAEhB+B,EAAmBhD,EAAKP,YAAYwD,QAAQ,QAAM,IAAItB,MAAM,MAC5DuB,EAAsB,GAE5B,GAAIjC,GAAYA,EAASR,OACvB,IAAK,IAAID,EAAI,EAAGA,EAAIS,EAASR,OAAQD,IAAK,CACxC,IAAM2C,EAAelC,EAAST,GAAGyC,QAAQ,QAAM,IAAItB,MAAM,MAEzDuB,EAAoBpD,KAClB,yBAAKsD,UAAU,uBACb,0BAAMA,UAAU,kBAAkB5C,EAAI,EAAtC,KACA,0BAAM4C,UAAU,iBACbD,EAAaE,KAAI,SAACC,GAAD,OAChB,0BAAMF,UAAU,oBAAoBE,SAQhD,OACE,6BACE,yBAAKF,UAAU,oBACZJ,EAAiBK,KAAI,SAACC,GAAD,OACpB,0BAAMF,UAAU,oBAAoBE,OAGvCJ,GAKA,SAASK,EAAT,GAA0C,IAAnB3D,EAAkB,EAAlBA,QAASM,EAAS,EAATA,MACrC,OAAOsD,IAAeC,qBAAqB,kBAACV,EAAD,CAAanD,QAASA,EAASM,MAAOA,KClC5E,SAASwD,EAAT,GAAmC,IAAnB9D,EAAkB,EAAlBA,QAASM,EAAS,EAATA,MAAS,EACXyD,qBAAW1B,GAA/BhC,EAD+B,EAC/BA,MAAO2C,EADwB,EACxBA,SAETgB,EAAW,CAAEhE,UAASM,SACtB2D,EAAa9D,EAAe6D,EAAU3D,GACtC6D,GAAgBD,GAAc1D,EAAiByD,EAAU3D,GACzD8D,EAAkBF,GLYnB,SAA4B7D,EAAMC,GACvC,OAAOA,EAAMb,MAAMkB,EAAUN,IKbSgE,CAAmBJ,EAAU3D,GAE7DD,EAAOd,EAASU,GAASR,MAAMc,GAEjC+D,EAAOjE,EAAKP,YACZO,EAAKiB,WAAUgD,GAAQjE,EAAKiB,SAASiD,KAAK,MAC9CD,EAAOA,EAAK/C,cAEZ,IAAMiD,GAAiBlE,EAAM+B,QAAUiC,EAAKG,SAASnE,EAAM+B,QAE3D,SAASqC,EAAQvD,GAOb8B,EANGiB,EAKM/C,GAAWiD,EACX,CACP3C,KAAM,WACNpB,KAAK,aAAGc,WAAY8C,IAGb,CACPxC,KAAM,WACNpB,KAAK,aAAGc,WAAY8C,IAZb,CACPxC,KAAM,SACNpB,KAAK,aAAGc,WAAY8C,KAe1B,IAAMR,EAAYkB,IAAW,OAAQ,CACnCC,SAAUV,EACVW,WAAYV,EACZW,UAAWN,IAGb,GAAInE,EAAKiB,UAAYjB,EAAKiB,SAASR,OAAQ,CAEzC,IADA,IAAMiE,EAAkB,GADiB,WAEhClE,GACPkE,EAAgB5E,KACd,yBACEsD,UAAWkB,IAAW,UAAW,CAAEC,SAAUV,GAAcE,GAAmBvD,IAC9EmE,QAAS,kBAAMN,EAAQ7D,KAEtBA,EAAI,KANFA,EAAI,EAAGA,EAAIR,EAAKiB,SAASR,OAAQD,IAAM,EAAvCA,GAWT,OACE,yBAAKoE,WAAUrB,EAAYK,GAAWR,UAAWkB,IAAWlB,EAAW,aACpEsB,GAIL,OACE,yBAAKE,WAAUrB,EAAYK,GAAWR,UAAWA,EAAWuB,QAAS,kBAAMN,GAAS,MC7DnF,SAASQ,EAAT,GAA4B,IAAThF,EAAQ,EAARA,KAChBI,EAAU0D,qBAAW1B,GAArBhC,MAEFL,EAAUV,EAASW,GACnBiF,EAAczE,EAAmBT,EAASK,GAC1C8E,EAAaD,GAAevE,EAAkBX,EAASK,GAEvDS,EAAe,GACrB,IAAK,IAAIlB,KAAcI,EAAQc,aAC7BA,EAAaZ,KACX,yBAAKsD,UAAS,gBAAW5D,IAAeI,EAAQc,aAAalB,KAIjE,IAAMH,EAAU,GAChB,IAAK,IAAIG,KAAcI,EAAQP,QAC7BA,EAAQS,KAAK,yBAAKsD,UAAS,gBAAW5D,IAAeI,EAAQP,QAAQG,KAIvE,IADA,IAAMJ,EAAQ,GACLoB,EAAI,EAAGA,EAAIZ,EAAQR,MAAMqB,OAAQD,IACxCpB,EAAMU,KAAK,kBAAC4D,EAAD,CAAM9D,QAASC,EAAMK,MAAOM,KAGzC,OACE,yBAAK4C,UAAWkB,IAAW,UAAW,CAAEU,UAAWF,EAAaG,SAAUF,KACxE,yBAAK3B,UAAU,uBAAuB1C,GACtC,yBAAK0C,UAAU,gBAAf,IAAgCvD,EAAhC,KACA,yBAAKuD,UAAU,kBAAkB/D,GACjC,yBAAK+D,UAAU,SAAShE,IC/BvB,SAAS8F,EAAT,GAA+B,IAAD,EAARrF,EAAQ,EAARA,KACrBsF,EAAW,GACX3F,EAAaF,EAAYO,GAFI,cAIfL,GAJe,IAInC,2BAAgC,CAAC,IAAxBI,EAAuB,QAC9BuF,EAASrF,KAAK,kBAAC+E,EAAD,CAAShF,KAAMD,EAAQC,SALJ,8BAQnC,OACE,yBAAKuD,UAAU,cACb,yBAAKA,UAAU,mBACZvD,EACD,kBAAC6D,EAAD,CAAM9D,QAAQ,OAAOM,MAAOL,KAE9B,yBAAKuD,UAAU,YAAY+B,IChB1B,SAASC,IAAa,IACnBxC,EAAae,qBAAW1B,GAAxBW,SAKR,OAAO,2BAAOQ,UAAU,YAAYiC,SAAU,SAACC,GAAD,OAJ7BxC,EAI4CwC,EAAEC,OAAOzC,WAHpEF,EAAS,CAAExB,KAAM,SAAUY,OAAQc,IADrC,IAAiBA,KCAnB,IAAM0C,EAAuB,kBAEvBC,EAAa,CACjB,CACEC,OAAQ,aACRC,MAAO,2EAET,CACED,OAAQ,SACRC,MAAO,qMAET,CACED,OAAQ,QACRC,MAAO,qHAET,CACED,OAAQ,cACRC,MAAO,mGAET,CACED,OAAQ,UACRC,MAAO,mCAET,CACED,OAAQ,cACRC,MAAO,8CAET,CACED,OAAQ,WACRC,MAAO,YAET,CACED,OAAQ,WACRC,MAAO,YAET,CACED,OAAQ,eACRC,MAAO,iBAkDJ,SAASC,IAAY,IAAD,EACjB3F,EAAU0D,qBAAW1B,GAArBhC,MAEFU,EAAS,GAHU,cAIF1B,GAJE,IAIzB,2BAAyC,CAAC,IAAjCO,EAAgC,QACvCmB,EAAOb,KAAK,yBAAKsD,UAAS,gBAAW5D,IAAeS,EAAMU,OAAOnB,MAL1C,8BAQzB,IARyB,EAQnBqG,EAtDR,SAA0B5F,GACxB,IAAM6F,EAAiB,GACjBC,EAAgB,GAEtB,SAASC,EAAY1C,GACnBA,EACG3B,MAAM,WACN0B,KAAI,SAAC4C,GAAD,OAAOA,EAAEC,UACb3G,SAAQ,SAAC4G,GACR,IAAInF,EAAQmF,EAASnF,MAAMwE,GAC3B,GAAIxE,EAAO,CACT,IAAMvB,EAAcuB,EAAM,GACpB8B,EAAQsD,OAAOpF,EAAM,IAC3B8E,EAAerG,IAAgBqG,EAAerG,IAAgB,GAAKqD,OAEnEiD,EAAcjG,KAAKqG,MAK3B,IAAK,IAAI9E,KAAUpB,EAAMb,MAAO,CAAC,IAAD,EACPiC,EAAOM,MAAM,KADN,mBACzB/B,EADyB,KAChBM,EADgB,KAGxBF,EAAOd,EAASU,GAASR,MAAMc,GAC/BY,EAAUb,EAAMb,MAAMiC,GAEtB8E,EAAWnG,EAAKP,YAAYyG,OAE9BC,GAAUH,EAAYG,IACV,GAAZrF,GACFkF,EAAYhG,EAAKiB,SAASH,IAM9B,IAFA,IAAM+E,EAAY,GAElB,MAAwBQ,OAAOC,KAAKR,GAApC,eAAqD,CAAhD,IAAIrG,EAAW,KACdqD,EAAQgD,EAAerG,GAC3BoG,EAAU/F,KAAV,WAAmByG,KAAKC,MAAc,GAAR1D,GAAc,IAA5C,OAAiDrD,IAKnD,OAFAoG,EAAU/F,KAAV,MAAA+F,EAAkBE,GAEXF,EAWWY,CAAiBxG,GAC/ByG,EAAsBjB,EAAWpC,KAAI,SAACsD,GAAD,MAAO,MAC1CC,EAAiB,GAVE,cAYJf,GAZI,IAYzB,2BAAgC,CAG9B,IAH+B,IAAxBM,EAAuB,QAC1BU,GAAc,EAETrG,EAAI,EAAGA,EAAIiF,EAAWhF,OAAQD,IAAK,CAC1C,IAAMsG,EAAWrB,EAAWjF,GAE5B,GAAI2F,EAASjF,cAAcF,MAAM8F,EAASnB,OAAQ,CAChDkB,GAAc,EACdH,EAAoBlG,GAAGV,KAAKqG,GAC5B,OAICU,GACHD,EAAe9G,KAAKqG,IA1BC,8BA+BzB,IADA,IAAMY,EAAmB,GAChBvG,EAAI,EAAGA,EAAIiF,EAAWhF,OAAQD,IAAK,CAC1C,IAAMsG,EAAWrB,EAAWjF,GAExBkG,EAAoBlG,GAAGC,QACzBsG,EAAiBjH,KACf,yBAAKsD,UAAU,YACb,yBAAKA,UAAU,mBAAmB0D,EAASpB,OAA3C,KACCgB,EAAoBlG,GAAG6C,KAAI,SAAC2D,GAAD,OAC1B,6BAAMA,QAkBhB,OAXIJ,EAAenG,QACjBsG,EAAiBjH,KACf,yBAAKsD,UAAU,YACb,yBAAKA,UAAU,mBAAf,kBACCwD,EAAevD,KAAI,SAAC2D,GAAD,OAClB,6BAAMA,QAOZ,yBAAK5D,UAAU,sBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,wBADF,IAC2DzC,GAE3D,yBAAKyC,UAAU,eAAf,gBAA2CiD,OAAOC,KAAKrG,EAAMb,OAAOqB,QACpE,yBAAK2C,UAAU,iBAAf,WACA,kBAACgC,EAAD,MAEA,yBAAKhC,UAAU,eACb,yBAAKA,UAAU,qBAAf,qBACC2D,KCzIIE,MAhBf,WACE,OACE,kBAAC7E,EAAD,KACE,yBAAKgB,UAAU,cACb,yBAAKA,UAAU,eACZnE,EAAiBoE,KAAI,SAAC7D,GAAD,OACpB,kBAAC0F,EAAD,CAAYrF,KAAML,QAGtB,kBAACoG,EAAD,OAEF,kBAAC,IAAD,CAAcxC,UAAU,UAAU8D,OAAO,QAAQC,MAAM,EAAMC,WAAW,MCd9EC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ddbda10d.chunk.js","sourcesContent":["const ascensionData = require('./ascension.json');\r\n\r\nexport const EMBODIMENT_NAMES = ['force', 'entropy', 'form', 'inertia', 'life'];\r\nexport const CLUSTERS = { root: { nodes: {}, rewards: {} } };\r\nexport const EMBODIMENTS = {};\r\n\r\nEMBODIMENT_NAMES.forEach(\r\n  (embodiment) =>\r\n    (CLUSTERS.root.nodes[embodiment] = {\r\n      description: `+1 ${embodiment[0].toUpperCase()}${embodiment.substring(1)}.`,\r\n    })\r\n);\r\nEMBODIMENT_NAMES.forEach((embodiment) => (EMBODIMENTS[embodiment] = []));\r\n\r\nfor (let cluster of ascensionData) {\r\n  CLUSTERS[cluster.name] = cluster;\r\n  EMBODIMENTS[cluster.embodiment].push(cluster);\r\n}\r\n","import { CLUSTERS } from '../dataset';\r\n\r\nexport function isNodeSelected(node, state) {\r\n  return `${node.cluster}.${node.index}` in state.nodes;\r\n}\r\n\r\nexport function isNodeSelectable(node, state) {\r\n  if (node.cluster == 'root') return true;\r\n\r\n  const cluster = CLUSTERS[node.cluster];\r\n  const clusterAvailable = isClusterAvailable(cluster, state);\r\n  return (\r\n    (clusterAvailable && node.index == 0) ||\r\n    (clusterAvailable && isNodeSelected({ ...node, index: node.index - 1 }, state))\r\n  );\r\n}\r\n\r\nexport function isNodeDeselectable(node, state) {\r\n  return !isNodeSelected({ ...node, index: node.index + 1 }, state);\r\n}\r\n\r\nexport function getNodeId(node) {\r\n  return `${node.cluster}.${node.index}`;\r\n}\r\n\r\nexport function getSelectedSubnode(node, state) {\r\n  return state.nodes[getNodeId(node)];\r\n}\r\n\r\nexport function isClusterComplete(cluster, state) {\r\n  for (let i = 0; i < cluster.nodes.length; i++) {\r\n    if (!isNodeSelected({ cluster: cluster.name, index: i }, state)) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function isClusterAvailable(cluster, state) {\r\n  for (let embodiment in cluster.requirements) {\r\n    if (state.points[embodiment] < cluster.requirements[embodiment]) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function isValidState({ nodes, points }) {\r\n  let clusterNames = {};\r\n  for (let nodeId in nodes) {\r\n    clusterNames[nodeId.split('.')[0]] = true;\r\n  }\r\n\r\n  for (let clusterName in clusterNames) {\r\n    const cluster = CLUSTERS[clusterName];\r\n    for (let embodiment in cluster.requirements) {\r\n      if (points[embodiment] < cluster.requirements[embodiment]) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n","import {\r\n  getNodeId,\r\n  isNodeSelectable,\r\n  isClusterComplete,\r\n  isNodeDeselectable,\r\n  isValidState,\r\n} from '../util';\r\nimport { CLUSTERS } from '../../dataset';\r\n\r\nconst BONUS_REGEX = /\\+1 (Force|Entropy|Form|Inertia|Life)./;\r\n\r\nfunction getBonusPoint({ cluster, index, subnode }) {\r\n  const node = CLUSTERS[cluster].nodes[index];\r\n\r\n  let bonusPoint = null;\r\n  let match = node.description.match(BONUS_REGEX);\r\n  if (subnode != -1 && !match) match = node.subnodes[subnode].match(BONUS_REGEX);\r\n  if (match) bonusPoint = match[1].toLowerCase();\r\n\r\n  return bonusPoint;\r\n}\r\n\r\nexport function reducer(state, { type, node }) {\r\n  const nodeId = getNodeId(node);\r\n  const cluster = CLUSTERS[node.cluster];\r\n\r\n  const newNodes = { ...state.nodes };\r\n  const newPoints = { ...state.points };\r\n\r\n  const bonusPoint = getBonusPoint(node);\r\n\r\n  switch (type) {\r\n    case 'select':\r\n      if (!isNodeSelectable(node, state)) break;\r\n      newNodes[nodeId] = node.subnode;\r\n\r\n      if (isClusterComplete(cluster, { ...state, nodes: newNodes })) {\r\n        for (let embodiment in cluster.rewards) {\r\n          newPoints[embodiment] += cluster.rewards[embodiment];\r\n        }\r\n      }\r\n\r\n      if (bonusPoint) newPoints[bonusPoint] += 1;\r\n\r\n      break;\r\n\r\n    case 'deselect':\r\n      if (!isNodeDeselectable(node, state)) break;\r\n\r\n      if (cluster && isClusterComplete(cluster, { ...state, nodes: newNodes })) {\r\n        for (let embodiment in cluster.rewards) {\r\n          newPoints[embodiment] -= cluster.rewards[embodiment];\r\n        }\r\n      }\r\n\r\n      if (bonusPoint) newPoints[bonusPoint] -= 1;\r\n\r\n      delete newNodes[nodeId];\r\n      break;\r\n\r\n    case 'reselect':\r\n      const prevBonusPoint = getBonusPoint({ ...node, subnode: state.nodes[nodeId] });\r\n      if (bonusPoint) newPoints[bonusPoint] += 1;\r\n      if (prevBonusPoint) newPoints[prevBonusPoint] -= 1;\r\n\r\n      newNodes[nodeId] = node.subnode;\r\n      break;\r\n  }\r\n\r\n  if (!isValidState({ nodes: newNodes, points: newPoints })) return state;\r\n  return { ...state, nodes: newNodes, points: newPoints };\r\n}\r\n","import { reducer as selectionReducer } from './selection';\r\n\r\nexport function reducer(state, payload) {\r\n  switch (payload.type) {\r\n    case 'select':\r\n    case 'deselect':\r\n    case 'reselect':\r\n      return selectionReducer(state, payload);\r\n\r\n    case 'filter':\r\n      return { ...state, filter: payload.filter.toLowerCase() };\r\n  }\r\n}\r\n","import React, { useReducer } from 'react';\r\nimport { reducer } from './reducers';\r\n\r\nexport const CalculatorContext = React.createContext(null);\r\n\r\nexport function CalculatorProvider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    nodes: {},\r\n    points: {\r\n      force: 0,\r\n      entropy: 0,\r\n      form: 0,\r\n      inertia: 0,\r\n      life: 0,\r\n    },\r\n    filter: '',\r\n  });\r\n\r\n  return (\r\n    <CalculatorContext.Provider value={{ state, dispatch }}>{children}</CalculatorContext.Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport { CLUSTERS } from '../dataset';\r\n\r\nexport function NodeTooltip({ cluster, index }) {\r\n  const node = CLUSTERS[cluster].nodes[index];\r\n  const subnodes = node.subnodes;\r\n\r\n  const descriptionLines = node.description.replace(/»/g, '').split('\\n');\r\n  const subnodeDescriptions = [];\r\n\r\n  if (subnodes && subnodes.length) {\r\n    for (let i = 0; i < subnodes.length; i++) {\r\n      const subnodeLines = subnodes[i].replace(/»/g, '').split('\\n');\r\n\r\n      subnodeDescriptions.push(\r\n        <div className=\"subnode-description\">\r\n          <span className=\"subnode-number\">{i + 1})</span>\r\n          <span className=\"subnode-lines\">\r\n            {subnodeLines.map((line) => (\r\n              <span className=\"description-line\">{line}</span>\r\n            ))}\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"node-description\">\r\n        {descriptionLines.map((line) => (\r\n          <span className=\"description-line\">{line}</span>\r\n        ))}\r\n      </div>\r\n      {subnodeDescriptions}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function tooltipHtml({ cluster, index }) {\r\n  return ReactDOMServer.renderToStaticMarkup(<NodeTooltip cluster={cluster} index={index} />);\r\n}\r\n","import React, { useContext } from 'react';\r\nimport classNames from 'classnames';\r\nimport { CalculatorContext } from '../state/CalculatorContext';\r\nimport { isNodeSelected, isNodeSelectable, getSelectedSubnode } from '../state/util';\r\nimport { CLUSTERS } from '../dataset';\r\nimport { tooltipHtml } from './NodeTooltip';\r\n\r\nexport function Node({ cluster, index }) {\r\n  const { state, dispatch } = useContext(CalculatorContext);\r\n\r\n  const nodeInfo = { cluster, index };\r\n  const isSelected = isNodeSelected(nodeInfo, state);\r\n  const isSelectable = !isSelected && isNodeSelectable(nodeInfo, state);\r\n  const selectedSubnode = isSelected && getSelectedSubnode(nodeInfo, state);\r\n\r\n  const node = CLUSTERS[cluster].nodes[index];\r\n\r\n  let text = node.description;\r\n  if (node.subnodes) text += node.subnodes.join(' ');\r\n  text = text.toLowerCase();\r\n\r\n  const matchesFilter = !state.filter || text.includes(state.filter);\r\n\r\n  function handler(subnode) {\r\n    if (!isSelected) {\r\n      dispatch({\r\n        type: 'select',\r\n        node: { subnode, ...nodeInfo },\r\n      });\r\n    } else if (subnode != selectedSubnode) {\r\n      dispatch({\r\n        type: 'reselect',\r\n        node: { subnode, ...nodeInfo },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: 'deselect',\r\n        node: { subnode, ...nodeInfo },\r\n      });\r\n    }\r\n  }\r\n\r\n  const className = classNames('node', {\r\n    selected: isSelected,\r\n    selectable: isSelectable,\r\n    filtered: !matchesFilter,\r\n  });\r\n\r\n  if (node.subnodes && node.subnodes.length) {\r\n    const subnodeElements = [];\r\n    for (let i = 0; i < node.subnodes.length; i++) {\r\n      subnodeElements.push(\r\n        <div\r\n          className={classNames('subnode', { selected: isSelected && selectedSubnode == i })}\r\n          onClick={() => handler(i)}\r\n        >\r\n          {i + 1}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div data-tip={tooltipHtml(nodeInfo)} className={classNames(className, 'subnodes')}>\r\n        {subnodeElements}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div data-tip={tooltipHtml(nodeInfo)} className={className} onClick={() => handler(-1)}></div>\r\n    );\r\n  }\r\n}\r\n","import React, { useContext } from 'react';\r\nimport classNames from 'classnames';\r\nimport { Node } from './Node';\r\nimport { CLUSTERS } from '../dataset';\r\nimport { CalculatorContext } from '../state/CalculatorContext';\r\nimport { isClusterAvailable, isClusterComplete } from '../state/util';\r\n\r\nexport function Cluster({ name }) {\r\n  const { state } = useContext(CalculatorContext);\r\n\r\n  const cluster = CLUSTERS[name];\r\n  const isAvailable = isClusterAvailable(cluster, state);\r\n  const isComplete = isAvailable && isClusterComplete(cluster, state);\r\n\r\n  const requirements = [];\r\n  for (let embodiment in cluster.requirements) {\r\n    requirements.push(\r\n      <div className={`point ${embodiment}`}>{cluster.requirements[embodiment]}</div>\r\n    );\r\n  }\r\n\r\n  const rewards = [];\r\n  for (let embodiment in cluster.rewards) {\r\n    rewards.push(<div className={`point ${embodiment}`}>{cluster.rewards[embodiment]}</div>);\r\n  }\r\n\r\n  const nodes = [];\r\n  for (let i = 0; i < cluster.nodes.length; i++) {\r\n    nodes.push(<Node cluster={name} index={i} />);\r\n  }\r\n\r\n  return (\r\n    <div className={classNames('cluster', { available: isAvailable, complete: isComplete })}>\r\n      <div className=\"requirements points\">{requirements}</div>\r\n      <div className=\"cluster-name\"> {name} </div>\r\n      <div className=\"rewards points\">{rewards}</div>\r\n      <div className=\"nodes\">{nodes}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Node } from './Node';\r\nimport { Cluster } from './Cluster';\r\nimport { EMBODIMENTS } from '../dataset';\r\n\r\nexport function Embodiment({ name }) {\r\n  const clusters = [];\r\n  const embodiment = EMBODIMENTS[name];\r\n\r\n  for (let cluster of embodiment) {\r\n    clusters.push(<Cluster name={cluster.name} />);\r\n  }\r\n\r\n  return (\r\n    <div className=\"embodiment\">\r\n      <div className=\"embodiment-name\">\r\n        {name}\r\n        <Node cluster=\"root\" index={name} />\r\n      </div>\r\n      <div className=\"clusters\">{clusters}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { CalculatorContext } from '../state/CalculatorContext';\r\n\r\nexport function SearchBox() {\r\n  const { dispatch } = useContext(CalculatorContext);\r\n  function handler(value) {\r\n    dispatch({ type: 'filter', filter: value });\r\n  }\r\n\r\n  return <input className=\"searchbox\" onChange={(e) => handler(e.target.value)}></input>;\r\n}\r\n","import React, { useContext } from 'react';\nimport { CalculatorContext } from '../state/CalculatorContext';\nimport { EMBODIMENT_NAMES, CLUSTERS } from '../dataset';\nimport { SearchBox } from './SearchBox';\n\nconst VALUE_MODIFIER_REGEX = /^\\+([\\d.]+)(.*)/;\n\nconst categories = [\n  {\n    header: 'Attributes',\n    regex: /^\\+\\d+(% invested)? (strength|constitution|power|finesse|wits|memory)\\./,\n  },\n  {\n    header: 'Skills',\n    regex: /^\\+\\d+ (ranged|single-handed|two-handed|leadership|perseverance|retribution|aerotheurge|geomancer|huntsman|hydrosophist|necromancer|polymorph|pyrokinetic|scoundrel|summoning|warfare|sourcery)\\./,\n  },\n  {\n    header: 'Stats',\n    regex: /^\\+[\\d.]+%? (initiative|critical chance|accuracy|damage|movement speed|lifesteal|maximum vitality|dodge chance)\\./,\n  },\n  {\n    header: 'Resistances',\n    regex: /^\\+\\d+% ((water|fire|air|earth|poison|physical|piercing) resistance|to elemental resistances)\\./,\n  },\n  {\n    header: 'Summons',\n    regex: /^\\+[\\d.]+%? summon \\w+( \\w+)?\\./,\n  },\n  {\n    header: 'Embodiments',\n    regex: /^\\+\\d+ (force|entropy|form|inertia|life)\\./,\n  },\n  {\n    header: 'Predator',\n    regex: /predator/,\n  },\n  {\n    header: 'Voracity',\n    regex: /voracity/,\n  },\n  {\n    header: 'Elementalist',\n    regex: /elementalist/,\n  },\n];\n\nfunction collectModifiers(state) {\n  const valueModifiers = {};\n  const textModifiers = [];\n\n  function addModifier(line) {\n    line\n      .split('\\n» ')\n      .map((s) => s.trim())\n      .forEach((modifier) => {\n        let match = modifier.match(VALUE_MODIFIER_REGEX);\n        if (match) {\n          const description = match[2];\n          const value = Number(match[1]);\n          valueModifiers[description] = (valueModifiers[description] || 0) + value;\n        } else {\n          textModifiers.push(modifier);\n        }\n      });\n  }\n\n  for (let nodeId in state.nodes) {\n    let [cluster, index] = nodeId.split('.');\n\n    const node = CLUSTERS[cluster].nodes[index];\n    const subnode = state.nodes[nodeId];\n\n    const modifier = node.description.trim();\n\n    if (modifier) addModifier(modifier);\n    if (subnode != -1) {\n      addModifier(node.subnodes[subnode]);\n    }\n  }\n\n  const modifiers = [];\n\n  for (let description of Object.keys(valueModifiers)) {\n    let value = valueModifiers[description];\n    modifiers.push(`+${Math.round(value * 10) / 10}${description}`);\n  }\n\n  modifiers.push(...textModifiers);\n\n  return modifiers;\n}\n\nexport function Overview() {\n  const { state } = useContext(CalculatorContext);\n\n  const points = [];\n  for (let embodiment of EMBODIMENT_NAMES) {\n    points.push(<div className={`point ${embodiment}`}>{state.points[embodiment]}</div>);\n  }\n\n  const modifiers = collectModifiers(state);\n  let modifiersByCategory = categories.map((c) => []);\n  const otherModifiers = [];\n\n  for (let modifier of modifiers) {\n    let hasCategory = false;\n\n    for (let i = 0; i < categories.length; i++) {\n      const category = categories[i];\n\n      if (modifier.toLowerCase().match(category.regex)) {\n        hasCategory = true;\n        modifiersByCategory[i].push(modifier);\n        break;\n      }\n    }\n\n    if (!hasCategory) {\n      otherModifiers.push(modifier);\n    }\n  }\n\n  const categoryElements = [];\n  for (let i = 0; i < categories.length; i++) {\n    const category = categories[i];\n\n    if (modifiersByCategory[i].length) {\n      categoryElements.push(\n        <div className=\"category\">\n          <div className=\"category-header\">{category.header}:</div>\n          {modifiersByCategory[i].map((m) => (\n            <div>{m}</div>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  if (otherModifiers.length) {\n    categoryElements.push(\n      <div className=\"category\">\n        <div className=\"category-header\">Other bonuses:</div>\n        {otherModifiers.map((m) => (\n          <div>{m}</div>\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"overview-container\">\n      <div className=\"overview\">\n        <div className=\"total-points points\">\n          <div className=\"points-name\">Available Ascension:</div> {points}\n        </div>\n        <div className=\"points-used\">Points used: {Object.keys(state.nodes).length}</div>\n        <div className=\"search-header\">Search:</div>\n        <SearchBox />\n\n        <div className=\"description\">\n          <div className=\"description-title\">Bonuses overview:</div>\n          {categoryElements}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport ReactTooltip from 'react-tooltip';\nimport { CalculatorProvider } from './state/CalculatorContext';\nimport { EMBODIMENT_NAMES } from './dataset';\nimport { Embodiment } from './components/Embodiment';\nimport { Overview } from './components/Overview';\n\nfunction App() {\n  return (\n    <CalculatorProvider>\n      <div className=\"calculator\">\n        <div className=\"embodiments\">\n          {EMBODIMENT_NAMES.map((embodiment) => (\n            <Embodiment name={embodiment} />\n          ))}\n        </div>\n        <Overview />\n      </div>\n      <ReactTooltip className=\"tooltip\" effect=\"solid\" html={true} multiline={true} />\n    </CalculatorProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}