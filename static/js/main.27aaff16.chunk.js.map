{"version":3,"sources":["CalculatorContext.js","Overview.js","Node.js","Cluster.js","School.js","App.js","index.js"],"names":["ascensionData","require","schoolNames","clusters","root","nodes","rewards","schools","forEach","school","description","toUpperCase","substring","cluster","name","push","CalculatorContext","React","createContext","isNodeSelected","node","selectedNodes","index","isNodeSelectable","state","clusterAvailable","isClusterAvailable","isClusterComplete","i","length","requirements","points","reducer","action","newNodes","newPoints","type","subnode","bonusPoint","isNodeDeselectable","prevBonusPoint","clusterNames","nodeId","split","clusterName","isValidState","CalculatorProvider","children","useReducer","force","entropy","form","inertia","life","dispatch","Provider","value","VALUE_MODIFIER_REGEX","Overview","calculator","useContext","className","valueModifiers","textModifiers","addModifier","line","map","s","trim","modifier","match","Number","subnodes","modifiers","Object","keys","m","BONUS_REGEX","Node","props","isSelected","isSelectable","selectedSubnode","getSelectedSubnode","onClick","toLowerCase","tooltip","classNames","selected","bind","this","data-tip","join","replace","selectable","Cluster","isAvailable","isComplete","available","complete","School","App","effect","multiline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27aaff16.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\r\n\r\nconst ascensionData = require('./ascension.json');\r\nexport const schoolNames = ['force', 'entropy', 'form', 'inertia', 'life'];\r\nexport const clusters = { root: { nodes: {}, rewards: {} } };\r\nexport const schools = {};\r\nschoolNames.forEach(\r\n  (school) =>\r\n    (clusters.root.nodes[school] = {\r\n      description: `+1 ${school[0].toUpperCase()}${school.substring(1)}.`,\r\n    })\r\n);\r\nschoolNames.forEach((school) => (schools[school] = []));\r\n\r\nfor (let cluster of ascensionData) {\r\n  clusters[cluster.name] = cluster;\r\n  schools[cluster.school].push(cluster);\r\n}\r\n\r\nexport const CalculatorContext = React.createContext(null);\r\n\r\nexport function isNodeSelected(node, selectedNodes) {\r\n  return `${node.cluster}.${node.index}` in selectedNodes;\r\n}\r\n\r\nexport function isNodeSelectable(node, state) {\r\n  if (node.cluster == 'root') return true;\r\n\r\n  const cluster = clusters[node.cluster];\r\n  const clusterAvailable = isClusterAvailable(cluster, state);\r\n  return (\r\n    (clusterAvailable && node.index == 0) ||\r\n    (clusterAvailable &&\r\n      isNodeSelected({ cluster: node.cluster, index: node.index - 1 }, state.nodes))\r\n  );\r\n}\r\n\r\nfunction isNodeDeselectable(node, state) {\r\n  return !isNodeSelected({ cluster: node.cluster, index: node.index + 1 }, state.nodes);\r\n}\r\n\r\nexport function getSelectedSubnode(node, selectedNodes) {\r\n  return selectedNodes[`${node.cluster}.${node.index}`];\r\n}\r\n\r\nexport function isClusterComplete(cluster, selectedNodes) {\r\n  for (let i = 0; i < cluster.nodes.length; i++) {\r\n    if (!isNodeSelected({ cluster: cluster.name, index: i }, selectedNodes)) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function isClusterAvailable(cluster, state) {\r\n  for (let school in cluster.requirements) {\r\n    if (state.points[school] < cluster.requirements[school]) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction isValidState({ nodes, points }) {\r\n  let clusterNames = {};\r\n  for (let nodeId in nodes) {\r\n    clusterNames[nodeId.split('.')[0]] = true;\r\n  }\r\n\r\n  for (let clusterName in clusterNames) {\r\n    const cluster = clusters[clusterName];\r\n    for (let school in cluster.requirements) {\r\n      if (points[school] < cluster.requirements[school]) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction reducer(state, action) {\r\n  const newNodes = { ...state.nodes };\r\n  const newPoints = { ...state.points };\r\n  const node = action.node;\r\n  const cluster = clusters[node.cluster];\r\n\r\n  switch (action.type) {\r\n    case 'select':\r\n      if (!isNodeSelectable(node, state)) break;\r\n      newNodes[`${node.cluster}.${node.index}`] = node.subnode;\r\n\r\n      if (isClusterComplete(cluster, newNodes)) {\r\n        for (let school in cluster.rewards) {\r\n          newPoints[school] += cluster.rewards[school];\r\n        }\r\n      }\r\n\r\n      if (node.bonusPoint) {\r\n        newPoints[node.bonusPoint] += 1;\r\n      }\r\n\r\n      break;\r\n\r\n    case 'deselect':\r\n      if (!isNodeDeselectable(node, state)) break;\r\n\r\n      if (cluster && isClusterComplete(cluster, newNodes)) {\r\n        for (let school in cluster.rewards) {\r\n          newPoints[school] -= cluster.rewards[school];\r\n        }\r\n      }\r\n\r\n      if (node.bonusPoint) {\r\n        newPoints[node.bonusPoint] -= 1;\r\n      }\r\n\r\n      delete newNodes[`${node.cluster}.${node.index}`];\r\n      break;\r\n\r\n    case 'reselect':\r\n      if (node.bonusPoint) {\r\n        newPoints[node.bonusPoint] += 1;\r\n      }\r\n      if (node.prevBonusPoint) {\r\n        newPoints[node.prevBonusPoint] -= 1;\r\n      }\r\n\r\n      newNodes[`${node.cluster}.${node.index}`] = node.subnode;\r\n      break;\r\n  }\r\n\r\n  if (!isValidState({ nodes: newNodes, points: newPoints })) return state;\r\n  return { nodes: newNodes, points: newPoints };\r\n}\r\n\r\nexport function CalculatorProvider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    nodes: {},\r\n    points: {\r\n      force: 0,\r\n      entropy: 0,\r\n      form: 0,\r\n      inertia: 0,\r\n      life: 0,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <CalculatorContext.Provider value={{ state, dispatch }}>{children}</CalculatorContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { CalculatorContext, schoolNames, clusters } from './CalculatorContext';\r\n\r\nconst VALUE_MODIFIER_REGEX = /^\\+(\\d+)(.*)/;\r\n\r\nexport function Overview() {\r\n  const calculator = useContext(CalculatorContext);\r\n  const state = calculator.state;\r\n\r\n  const points = [];\r\n  for (let school of schoolNames) {\r\n    points.push(<div className={`point ${school}`}>{calculator.state.points[school]}</div>);\r\n  }\r\n\r\n  const valueModifiers = {};\r\n  const textModifiers = [];\r\n\r\n  function addModifier(line) {\r\n    line\r\n      .split('\\n» ')\r\n      .map((s) => s.trim())\r\n      .forEach((modifier) => {\r\n        let match = modifier.match(VALUE_MODIFIER_REGEX);\r\n        if (match) {\r\n          const description = match[2];\r\n          const value = Number(match[1]);\r\n          valueModifiers[description] = (valueModifiers[description] || 0) + value;\r\n        } else {\r\n          textModifiers.push(modifier);\r\n        }\r\n      });\r\n  }\r\n\r\n  for (let nodeId in state.nodes) {\r\n    let [cluster, index] = nodeId.split('.');\r\n\r\n    const node = clusters[cluster].nodes[index];\r\n    const subnode = state.nodes[nodeId];\r\n\r\n    const modifier = node.description.trim();\r\n\r\n    if (modifier) addModifier(modifier);\r\n    if (subnode != -1) {\r\n      addModifier(node.subnodes[subnode]);\r\n    }\r\n  }\r\n\r\n  const modifiers = [];\r\n\r\n  for (let description of Object.keys(valueModifiers)) {\r\n    let value = valueModifiers[description];\r\n    modifiers.push(`+${value}${description}`);\r\n  }\r\n\r\n  modifiers.push(...textModifiers);\r\n\r\n  return (\r\n    <div className=\"overview\">\r\n      <div className=\"total-points points\">\r\n        <div className=\"points-name\">Available Ascension:</div> {points}\r\n      </div>\r\n      <div className=\"points-used\">Points used: {Object.keys(state.nodes).length}</div>\r\n\r\n      <div className=\"description\">\r\n        <div className=\"description-title\">Bonuses overview:</div>\r\n        {modifiers.map((m) => (\r\n          <div>{m}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport classNames from 'classnames';\r\nimport {\r\n  CalculatorContext,\r\n  isNodeSelectable,\r\n  isNodeSelected,\r\n  getSelectedSubnode,\r\n  clusters,\r\n} from './CalculatorContext';\r\n\r\nconst BONUS_REGEX = /\\+1 (Force|Entropy|Form|Inertia|Life)./;\r\n\r\nexport function Node(props) {\r\n  const calculator = useContext(CalculatorContext);\r\n  const isSelected = isNodeSelected(props, calculator.state.nodes);\r\n  const isSelectable = !isSelected && isNodeSelectable(props, calculator.state);\r\n  const selectedSubnode = isSelected && getSelectedSubnode(props, calculator.state.nodes);\r\n  const node = clusters[props.cluster].nodes[props.index];\r\n\r\n  function onClick(subnode) {\r\n    let bonusPoint;\r\n\r\n    let match = node.description.match(BONUS_REGEX);\r\n    if (subnode != -1 && !match) match = node.subnodes[subnode].match(BONUS_REGEX);\r\n    if (match) bonusPoint = match[1].toLowerCase();\r\n\r\n    if (!isSelected) {\r\n      calculator.dispatch({\r\n        type: 'select',\r\n        node: { subnode, bonusPoint, ...props },\r\n      });\r\n    } else {\r\n      if (subnode != -1 && subnode != selectedSubnode) {\r\n        let prevBonusPoint;\r\n        let match = node.subnodes[selectedSubnode].match(BONUS_REGEX);\r\n        if (match) prevBonusPoint = match[1].toLowerCase();\r\n\r\n        calculator.dispatch({\r\n          type: 'reselect',\r\n          node: { subnode, bonusPoint, prevBonusPoint, ...props },\r\n        });\r\n      } else {\r\n        calculator.dispatch({\r\n          type: 'deselect',\r\n          node: { bonusPoint, ...props },\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  const tooltip = [];\r\n  if (node.description.trim()) tooltip.push(node.description.trim());\r\n\r\n  if (node.subnodes && node.subnodes.length) {\r\n    const subnodes = [];\r\n    for (let i = 0; i < node.subnodes.length; i++) {\r\n      tooltip.push(`${i + 1}) ${node.subnodes[i].trim()}`);\r\n      subnodes.push(\r\n        <div\r\n          className={classNames('subnode', { selected: isSelected && selectedSubnode == i })}\r\n          onClick={onClick.bind(this, i)}\r\n        >\r\n          {i + 1}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div\r\n        data-tip={tooltip.join('<br />').replace(/\\n/g, '<br/>')}\r\n        className={classNames('node subnodes', { selected: isSelected, selectable: isSelectable })}\r\n      >\r\n        {subnodes}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      data-tip={tooltip.join('<br />').replace(/\\n/g, '<br/>')}\r\n      className={classNames('node', { selected: isSelected, selectable: isSelectable })}\r\n      onClick={onClick.bind(this, -1)}\r\n    ></div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport classNames from 'classnames';\r\nimport { Node } from './Node';\r\nimport {\r\n  CalculatorContext,\r\n  isClusterAvailable,\r\n  isClusterComplete,\r\n  clusters,\r\n} from './CalculatorContext';\r\n\r\nexport function Cluster(props) {\r\n  const nodes = [];\r\n  const cluster = clusters[props.name];\r\n  const calculator = useContext(CalculatorContext);\r\n  const isAvailable = isClusterAvailable(cluster, calculator.state);\r\n  const isComplete = isAvailable && isClusterComplete(cluster, calculator.state.nodes);\r\n\r\n  const requirements = [];\r\n  for (let school in cluster.requirements) {\r\n    requirements.push(<div className={`point ${school}`}>{cluster.requirements[school]}</div>);\r\n  }\r\n\r\n  const rewards = [];\r\n  for (let school in cluster.rewards) {\r\n    rewards.push(<div className={`point ${school}`}>{cluster.rewards[school]}</div>);\r\n  }\r\n\r\n  for (let i = 0; i < cluster.nodes.length; i++) {\r\n    nodes.push(<Node cluster={props.name} index={i} />);\r\n  }\r\n\r\n  return (\r\n    <div className={classNames('cluster', { available: isAvailable, complete: isComplete })}>\r\n      <div className=\"requirements points\">{requirements}</div>\r\n      <div className=\"cluster-name\"> {props.name} </div>\r\n      <div className=\"rewards points\">{rewards}</div>\r\n      <div className=\"nodes\">{nodes}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Node } from './Node';\r\nimport { Cluster } from './Cluster';\r\nimport { schools } from './CalculatorContext';\r\n\r\nexport function School(props) {\r\n  const clusters = [];\r\n  const school = schools[props.name];\r\n\r\n  for (let cluster of school) {\r\n    clusters.push(<Cluster name={cluster.name} />);\r\n  }\r\n\r\n  return (\r\n    <div className=\"school\">\r\n      <div className=\"school-name\">\r\n        {props.name}\r\n        <Node cluster=\"root\" index={props.name} />\r\n      </div>\r\n      <div className=\"clusters\">{clusters}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { Overview } from './Overview';\nimport { School } from './School';\nimport ReactTooltip from 'react-tooltip';\nimport { CalculatorProvider, schoolNames } from './CalculatorContext';\n\nfunction App() {\n  return (\n    <CalculatorProvider>\n      <div className=\"calculator\">\n        <div className=\"schools\">\n          {schoolNames.map((school) => (\n            <School name={school} />\n          ))}\n        </div>\n        <Overview />\n      </div>\n      <ReactTooltip className=\"tooltip\" effect=\"solid\" multiline=\"true\" />\n    </CalculatorProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}