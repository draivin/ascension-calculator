{"version":3,"sources":["dataset/index.js","state/util.js","state/reducers/selection.js","state/reducers/index.js","state/HashManager.js","state/encoding.js","state/CalculatorContext.js","components/NodeTooltip.js","components/Node.js","components/Cluster.js","components/Embodiment.js","components/SearchBox.js","components/Overview.js","App.js","index.js"],"names":["ASCENSION_DATA","require","EMBODIMENT_NAMES","CLUSTERS","root","nodes","rewards","EMBODIMENTS","forEach","embodiment","description","toUpperCase","substring","sort","a","b","indexOf","Object","keys","requirements","length","name","localeCompare","entries","i","cluster","push","isNodeSelected","node","state","index","isNodeSelectable","clusterAvailable","isClusterAvailable","getNodeId","isClusterComplete","points","BONUS_REGEX","getBonusPoint","subnode","bonusPoint","match","subnodes","toLowerCase","reducer","type","nodeId","newNodes","newPoints","isNodeDeselectable","prevBonusPoint","clusterNames","split","clusterName","isValidState","pointsFromNodes","force","entropy","form","inertia","life","nodeIndex","Number","initState","filter","payload","selectionReducer","setHashNodes","window","history","replaceState","nodeIds","rootEntry","Math","pow","aCluster","aNode","bCluster","bNode","currentCluster","currentEntry","btoa","String","fromCharCode","apply","encode","getHashNodes","encoded","atob","map","c","charCodeAt","shift","clusterIndex","currentNode","entry","leftSubnode","rightSubnode","decode","location","hash","slice","HashManager","useContext","CalculatorContext","dispatch","useEffect","listener","addEventListener","removeEventListener","React","createContext","CalculatorProvider","children","useReducer","Provider","value","NodeTooltip","descriptionLines","replace","subnodeDescriptions","subnodeLines","className","line","tooltipHtml","ReactDOMServer","renderToStaticMarkup","Node","nodeInfo","isSelected","isSelectable","selectedSubnode","getSelectedSubnode","text","join","matchesFilter","includes","handler","classNames","selected","selectable","filtered","subnodeElements","onClick","data-tip","Cluster","isAvailable","isComplete","available","complete","Embodiment","clusters","SearchBox","onChange","e","target","VALUE_MODIFIER_REGEX","categories","header","regex","Overview","modifiers","valueModifiers","textModifiers","addModifier","s","trim","modifier","round","collectModifiers","modifiersByCategory","otherModifiers","hasCategory","category","categoryElements","m","App","effect","html","multiline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.735ba80f.chunk.js","sourcesContent":["export const ASCENSION_DATA = require('./ascension.json');\r\n\r\nexport const EMBODIMENT_NAMES = ['force', 'entropy', 'form', 'inertia', 'life'];\r\nexport const CLUSTERS = { root: { nodes: {}, rewards: {} } };\r\nexport const EMBODIMENTS = {};\r\n\r\nEMBODIMENT_NAMES.forEach(\r\n  (embodiment) =>\r\n    (CLUSTERS.root.nodes[embodiment] = {\r\n      description: `+1 ${embodiment[0].toUpperCase()}${embodiment.substring(1)}.`,\r\n    })\r\n);\r\nEMBODIMENT_NAMES.forEach((embodiment) => (EMBODIMENTS[embodiment] = []));\r\n\r\nASCENSION_DATA.sort((a, b) => {\r\n  if (a.embodiment != b.embodiment) {\r\n    return EMBODIMENT_NAMES.indexOf(a.embodiment) - EMBODIMENT_NAMES.indexOf(b.embodiment);\r\n  }\r\n\r\n  if (Object.keys(a.requirements).length == 1 && Object.keys(b.requirements).length > 1) {\r\n    return -1;\r\n  } else if (Object.keys(a.requirements).length > 1 && Object.keys(b.requirements).length == 1) {\r\n    return 1;\r\n  }\r\n\r\n  if (Object.keys(a.rewards).length == 0 && Object.keys(b.rewards).length > 0) {\r\n    return 1;\r\n  } else if (Object.keys(a.rewards).length > 0 && Object.keys(b.rewards).length == 0) {\r\n    return -1;\r\n  }\r\n\r\n  return a.name.localeCompare(b.name);\r\n});\r\n\r\nfor (let [i, cluster] of ASCENSION_DATA.entries()) {\r\n  cluster['index'] = i;\r\n  CLUSTERS[cluster.name] = cluster;\r\n  EMBODIMENTS[cluster.embodiment].push(cluster);\r\n}\r\n","import { CLUSTERS } from '../dataset';\r\n\r\nexport function isNodeSelected(node, state) {\r\n  return `${node.cluster}.${node.index}` in state.nodes;\r\n}\r\n\r\nexport function isNodeSelectable(node, state) {\r\n  if (node.cluster == 'root') return true;\r\n\r\n  const cluster = CLUSTERS[node.cluster];\r\n  const clusterAvailable = isClusterAvailable(cluster, state);\r\n  return (\r\n    (clusterAvailable && node.index == 0) ||\r\n    (clusterAvailable && isNodeSelected({ ...node, index: node.index - 1 }, state))\r\n  );\r\n}\r\n\r\nexport function isNodeDeselectable(node, state) {\r\n  return !isNodeSelected({ ...node, index: node.index + 1 }, state);\r\n}\r\n\r\nexport function getNodeId(node) {\r\n  return `${node.cluster}.${node.index}`;\r\n}\r\n\r\nexport function getSelectedSubnode(node, state) {\r\n  return state.nodes[getNodeId(node)];\r\n}\r\n\r\nexport function isClusterComplete(cluster, state) {\r\n  for (let i = 0; i < cluster.nodes.length; i++) {\r\n    if (!isNodeSelected({ cluster: cluster.name, index: i }, state)) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function isClusterAvailable(cluster, state) {\r\n  for (let embodiment in cluster.requirements) {\r\n    if (state.points[embodiment] < cluster.requirements[embodiment]) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function isValidState({ nodes, points }) {\r\n  let clusterNames = {};\r\n  for (let nodeId in nodes) {\r\n    clusterNames[nodeId.split('.')[0]] = true;\r\n  }\r\n\r\n  for (let clusterName in clusterNames) {\r\n    const cluster = CLUSTERS[clusterName];\r\n    for (let embodiment in cluster.requirements) {\r\n      if (points[embodiment] < cluster.requirements[embodiment]) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nconst BONUS_REGEX = /\\+1 (Force|Entropy|Form|Inertia|Life)./;\r\n\r\nexport function getBonusPoint({ cluster, index, subnode }) {\r\n  const node = CLUSTERS[cluster].nodes[index];\r\n\r\n  let bonusPoint = null;\r\n  let match = node.description.match(BONUS_REGEX);\r\n  if (subnode != -1 && !match) match = node.subnodes[subnode].match(BONUS_REGEX);\r\n  if (match) bonusPoint = match[1].toLowerCase();\r\n\r\n  return bonusPoint;\r\n}\r\n","import {\r\n  getNodeId,\r\n  isNodeSelectable,\r\n  isClusterComplete,\r\n  isNodeDeselectable,\r\n  isValidState,\r\n  getBonusPoint,\r\n} from '../util';\r\nimport { CLUSTERS } from '../../dataset';\r\n\r\nexport function reducer(state, { type, node }) {\r\n  const nodeId = getNodeId(node);\r\n  const cluster = CLUSTERS[node.cluster];\r\n\r\n  const newNodes = { ...state.nodes };\r\n  const newPoints = { ...state.points };\r\n\r\n  const bonusPoint = getBonusPoint(node);\r\n\r\n  switch (type) {\r\n    case 'select':\r\n      if (!isNodeSelectable(node, state)) break;\r\n      newNodes[nodeId] = node.subnode;\r\n\r\n      if (isClusterComplete(cluster, { ...state, nodes: newNodes })) {\r\n        for (let embodiment in cluster.rewards) {\r\n          newPoints[embodiment] += cluster.rewards[embodiment];\r\n        }\r\n      }\r\n\r\n      if (bonusPoint) newPoints[bonusPoint] += 1;\r\n\r\n      break;\r\n\r\n    case 'deselect':\r\n      if (!isNodeDeselectable(node, state)) break;\r\n\r\n      if (cluster && isClusterComplete(cluster, { ...state, nodes: newNodes })) {\r\n        for (let embodiment in cluster.rewards) {\r\n          newPoints[embodiment] -= cluster.rewards[embodiment];\r\n        }\r\n      }\r\n\r\n      if (bonusPoint) newPoints[bonusPoint] -= 1;\r\n\r\n      delete newNodes[nodeId];\r\n      break;\r\n\r\n    case 'reselect':\r\n      const prevBonusPoint = getBonusPoint({ ...node, subnode: state.nodes[nodeId] });\r\n      if (bonusPoint) newPoints[bonusPoint] += 1;\r\n      if (prevBonusPoint) newPoints[prevBonusPoint] -= 1;\r\n\r\n      newNodes[nodeId] = node.subnode;\r\n      break;\r\n  }\r\n\r\n  if (!isValidState({ nodes: newNodes, points: newPoints })) return state;\r\n  return { ...state, nodes: newNodes, points: newPoints };\r\n}\r\n","import { reducer as selectionReducer } from './selection';\r\nimport { CLUSTERS } from '../../dataset';\r\nimport { getBonusPoint } from '../util';\r\n\r\nfunction pointsFromNodes(nodes) {\r\n  const points = {\r\n    force: 0,\r\n    entropy: 0,\r\n    form: 0,\r\n    inertia: 0,\r\n    life: 0,\r\n  };\r\n\r\n  for (let nodeId of Object.keys(nodes)) {\r\n    const [clusterName, nodeIndex] = nodeId.split('.');\r\n\r\n    if (clusterName == 'root') {\r\n      points[nodeIndex] += 1;\r\n      continue;\r\n    }\r\n\r\n    const cluster = CLUSTERS[clusterName];\r\n    if (cluster.nodes.length - 1 == Number(nodeIndex)) {\r\n      for (let embodiment of Object.keys(cluster.rewards)) {\r\n        points[embodiment] += cluster.rewards[embodiment];\r\n      }\r\n    }\r\n\r\n    const bonusPoint = getBonusPoint({\r\n      cluster: clusterName,\r\n      index: Number(nodeIndex),\r\n      subnode: nodes[nodeId],\r\n    });\r\n\r\n    if (bonusPoint) points[bonusPoint] += 1;\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\nexport function initState(nodes) {\r\n  // console.log(nodes);\r\n  let points = pointsFromNodes(nodes);\r\n\r\n  return {\r\n    nodes,\r\n    points,\r\n    filter: '',\r\n  };\r\n}\r\n\r\nexport function reducer(state, payload) {\r\n  switch (payload.type) {\r\n    case 'select':\r\n    case 'deselect':\r\n    case 'reselect':\r\n      return selectionReducer(state, payload);\r\n\r\n    case 'filter':\r\n      return { ...state, filter: payload.filter.toLowerCase() };\r\n\r\n    case 'hashchange':\r\n      return { ...state, nodes: payload.nodes, points: pointsFromNodes(payload.nodes) };\r\n  }\r\n}\r\n","import { useContext, useEffect } from 'react';\r\nimport { CalculatorContext } from './CalculatorContext';\r\nimport { encode, decode } from './encoding';\r\n\r\nconst setHashNodes = (nodes) => {\r\n  window.history.replaceState(null, null, '#' + encode(nodes));\r\n};\r\n\r\nexport const getHashNodes = () => {\r\n  return decode(window.location.hash.slice(1));\r\n};\r\n\r\nexport function HashManager() {\r\n  const { state, dispatch } = useContext(CalculatorContext);\r\n\r\n  useEffect(() => {\r\n    setHashNodes(state.nodes);\r\n\r\n    const listener = () => {\r\n      dispatch({ type: 'hashchange', nodes: getHashNodes() });\r\n    };\r\n\r\n    window.addEventListener('hashchange', listener);\r\n    return () => {\r\n      window.removeEventListener('hashchange', listener);\r\n    };\r\n  });\r\n\r\n  return null;\r\n}\r\n","import { CLUSTERS, EMBODIMENT_NAMES, ASCENSION_DATA } from '../dataset';\r\n\r\nconst JUMP_FLAG = 1 << 6;\r\nconst JUMP_MASK = 0b111111;\r\n\r\nconst SUBNODE_MASK = 0b111;\r\n\r\nexport function encode(nodeIds) {\r\n  let entries = [];\r\n  let nodes = [];\r\n\r\n  let rootEntry = 0;\r\n\r\n  for (let nodeId in nodeIds) {\r\n    let [clusterName, nodeIndex] = nodeId.split('.');\r\n    let cluster = CLUSTERS[clusterName];\r\n    let subnode = nodeIds[nodeId];\r\n\r\n    if (clusterName == 'root') {\r\n      rootEntry += Math.pow(2, EMBODIMENT_NAMES.indexOf(nodeIndex));\r\n      continue;\r\n    }\r\n\r\n    nodes.push([cluster.index, Number(nodeIndex), subnode]);\r\n  }\r\n\r\n  nodes.sort(([aCluster, aNode, _aSubnode], [bCluster, bNode, _bSubnode]) => {\r\n    if (aCluster != bCluster) {\r\n      return aCluster - bCluster;\r\n    }\r\n\r\n    return aNode - bNode;\r\n  });\r\n\r\n  if (rootEntry) entries.push(rootEntry);\r\n\r\n  let currentCluster = -1;\r\n  let currentEntry = 0;\r\n  for (let [cluster, node, subnode] of nodes) {\r\n    if (cluster != currentCluster) {\r\n      if (currentEntry) entries.push(currentEntry);\r\n      entries.push(JUMP_FLAG | (cluster - currentCluster));\r\n      currentCluster = cluster;\r\n      currentEntry = 0;\r\n    }\r\n    if (node > 0 && node % 2 == 0) {\r\n      entries.push(currentEntry);\r\n      currentEntry = 0;\r\n    }\r\n\r\n    let value = subnode != -1 ? subnode + 1 : 1;\r\n    currentEntry += value << (3 * (node % 2));\r\n  }\r\n\r\n  if (currentEntry) entries.push(currentEntry);\r\n\r\n  const encoded = btoa(String.fromCharCode.apply(null, entries));\r\n  return encoded;\r\n}\r\n\r\nexport function decode(encoded) {\r\n  const nodes = {};\r\n  const entries = atob(encoded)\r\n    .split('')\r\n    .map((c) => c.charCodeAt(0));\r\n\r\n  let root = entries.shift() || 0;\r\n  for (let [i, name] of EMBODIMENT_NAMES.entries()) {\r\n    if (root & Math.pow(2, i)) {\r\n      nodes[`root.${name}`] = -1;\r\n    }\r\n  }\r\n\r\n  let clusterIndex = JUMP_MASK & (entries.shift() - 1);\r\n  let currentNode = 0;\r\n  for (let entry of entries) {\r\n    if (entry & JUMP_FLAG) {\r\n      clusterIndex += entry & JUMP_MASK;\r\n      currentNode = 0;\r\n      continue;\r\n    }\r\n\r\n    const cluster = ASCENSION_DATA[clusterIndex];\r\n\r\n    let leftSubnode = entry & SUBNODE_MASK;\r\n    let rightSubnode = (entry >> 3) & SUBNODE_MASK;\r\n\r\n    leftSubnode = cluster.nodes[currentNode].subnodes?.length ? leftSubnode - 1 : -1;\r\n    nodes[`${cluster.name}.${currentNode}`] = leftSubnode;\r\n\r\n    if (rightSubnode) {\r\n      rightSubnode = cluster.nodes[currentNode + 1].subnodes?.length ? rightSubnode - 1 : -1;\r\n      nodes[`${cluster.name}.${currentNode + 1}`] = rightSubnode;\r\n    }\r\n\r\n    currentNode += 2;\r\n  }\r\n\r\n  return nodes;\r\n}\r\n","import React, { useReducer } from 'react';\r\nimport { reducer, initState } from './reducers';\r\nimport { getHashNodes } from './HashManager';\r\n\r\nexport const CalculatorContext = React.createContext(null);\r\n\r\nexport function CalculatorProvider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, getHashNodes(), initState);\r\n\r\n  return (\r\n    <CalculatorContext.Provider value={{ state, dispatch }}>{children}</CalculatorContext.Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport { CLUSTERS } from '../dataset';\r\n\r\nexport function NodeTooltip({ cluster, index }) {\r\n  const node = CLUSTERS[cluster].nodes[index];\r\n  const subnodes = node.subnodes;\r\n\r\n  const descriptionLines = node.description.replace(/»/g, '').split('\\n');\r\n  const subnodeDescriptions = [];\r\n\r\n  if (subnodes && subnodes.length) {\r\n    for (let i = 0; i < subnodes.length; i++) {\r\n      const subnodeLines = subnodes[i].replace(/»/g, '').split('\\n');\r\n\r\n      subnodeDescriptions.push(\r\n        <div className=\"subnode-description\">\r\n          <span className=\"subnode-number\">{i + 1})</span>\r\n          <span className=\"subnode-lines\">\r\n            {subnodeLines.map((line) => (\r\n              <span className=\"description-line\">{line}</span>\r\n            ))}\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"node-description\">\r\n        {descriptionLines.map((line) => (\r\n          <span className=\"description-line\">{line}</span>\r\n        ))}\r\n      </div>\r\n      {subnodeDescriptions}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function tooltipHtml({ cluster, index }) {\r\n  return ReactDOMServer.renderToStaticMarkup(<NodeTooltip cluster={cluster} index={index} />);\r\n}\r\n","import React, { useContext } from 'react';\r\nimport classNames from 'classnames';\r\nimport { CalculatorContext } from '../state/CalculatorContext';\r\nimport { isNodeSelected, isNodeSelectable, getSelectedSubnode } from '../state/util';\r\nimport { CLUSTERS } from '../dataset';\r\nimport { tooltipHtml } from './NodeTooltip';\r\n\r\nexport function Node({ cluster, index }) {\r\n  const { state, dispatch } = useContext(CalculatorContext);\r\n\r\n  const nodeInfo = { cluster, index };\r\n  const isSelected = isNodeSelected(nodeInfo, state);\r\n  const isSelectable = !isSelected && isNodeSelectable(nodeInfo, state);\r\n  const selectedSubnode = isSelected && getSelectedSubnode(nodeInfo, state);\r\n\r\n  const node = CLUSTERS[cluster].nodes[index];\r\n\r\n  let text = node.description;\r\n  if (node.subnodes) text += node.subnodes.join(' ');\r\n  text = text.toLowerCase();\r\n\r\n  const matchesFilter = !state.filter || text.includes(state.filter);\r\n\r\n  function handler(subnode) {\r\n    if (!isSelected) {\r\n      dispatch({\r\n        type: 'select',\r\n        node: { subnode, ...nodeInfo },\r\n      });\r\n    } else if (subnode != selectedSubnode) {\r\n      dispatch({\r\n        type: 'reselect',\r\n        node: { subnode, ...nodeInfo },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: 'deselect',\r\n        node: { subnode, ...nodeInfo },\r\n      });\r\n    }\r\n  }\r\n\r\n  const className = classNames('node', {\r\n    selected: isSelected,\r\n    selectable: isSelectable,\r\n    filtered: !matchesFilter,\r\n  });\r\n\r\n  if (node.subnodes && node.subnodes.length) {\r\n    const subnodeElements = [];\r\n    for (let i = 0; i < node.subnodes.length; i++) {\r\n      subnodeElements.push(\r\n        <div\r\n          className={classNames('subnode', { selected: isSelected && selectedSubnode == i })}\r\n          onClick={() => handler(i)}\r\n        >\r\n          {i + 1}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div data-tip={tooltipHtml(nodeInfo)} className={classNames(className, 'subnodes')}>\r\n        {subnodeElements}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div data-tip={tooltipHtml(nodeInfo)} className={className} onClick={() => handler(-1)}></div>\r\n    );\r\n  }\r\n}\r\n","import React, { useContext } from 'react';\r\nimport classNames from 'classnames';\r\nimport { Node } from './Node';\r\nimport { CLUSTERS } from '../dataset';\r\nimport { CalculatorContext } from '../state/CalculatorContext';\r\nimport { isClusterAvailable, isClusterComplete } from '../state/util';\r\n\r\nexport function Cluster({ name }) {\r\n  const { state } = useContext(CalculatorContext);\r\n\r\n  const cluster = CLUSTERS[name];\r\n  const isAvailable = isClusterAvailable(cluster, state);\r\n  const isComplete = isAvailable && isClusterComplete(cluster, state);\r\n\r\n  const requirements = [];\r\n  for (let embodiment in cluster.requirements) {\r\n    requirements.push(\r\n      <div className={`point ${embodiment}`}>{cluster.requirements[embodiment]}</div>\r\n    );\r\n  }\r\n\r\n  const rewards = [];\r\n  for (let embodiment in cluster.rewards) {\r\n    rewards.push(<div className={`point ${embodiment}`}>{cluster.rewards[embodiment]}</div>);\r\n  }\r\n\r\n  const nodes = [];\r\n  for (let i = 0; i < cluster.nodes.length; i++) {\r\n    nodes.push(<Node cluster={name} index={i} />);\r\n  }\r\n\r\n  return (\r\n    <div className={classNames('cluster', { available: isAvailable, complete: isComplete })}>\r\n      <div className=\"requirements points\">{requirements}</div>\r\n      <div className=\"cluster-name\"> {name} </div>\r\n      <div className=\"rewards points\">{rewards}</div>\r\n      <div className=\"nodes\">{nodes}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Node } from './Node';\r\nimport { Cluster } from './Cluster';\r\nimport { EMBODIMENTS } from '../dataset';\r\n\r\nexport function Embodiment({ name }) {\r\n  const clusters = [];\r\n  const embodiment = EMBODIMENTS[name];\r\n\r\n  for (let cluster of embodiment) {\r\n    clusters.push(<Cluster name={cluster.name} />);\r\n  }\r\n\r\n  return (\r\n    <div className=\"embodiment\">\r\n      <div className=\"embodiment-name\">\r\n        {name}\r\n        <Node cluster=\"root\" index={name} />\r\n      </div>\r\n      <div className=\"clusters\">{clusters}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { CalculatorContext } from '../state/CalculatorContext';\r\n\r\nexport function SearchBox() {\r\n  const { dispatch } = useContext(CalculatorContext);\r\n  function handler(value) {\r\n    dispatch({ type: 'filter', filter: value });\r\n  }\r\n\r\n  return <input className=\"searchbox\" onChange={(e) => handler(e.target.value)}></input>;\r\n}\r\n","import React, { useContext } from 'react';\nimport { CalculatorContext } from '../state/CalculatorContext';\nimport { EMBODIMENT_NAMES, CLUSTERS } from '../dataset';\nimport { SearchBox } from './SearchBox';\n\nconst VALUE_MODIFIER_REGEX = /^\\+([\\d.]+)(.*)/;\n\nconst categories = [\n  {\n    header: 'Attributes',\n    regex: /^\\+\\d+(% invested)? (strength|constitution|power|finesse|wits|memory)\\./,\n  },\n  {\n    header: 'Skills',\n    regex: /^\\+\\d+ (ranged|single-handed|two-handed|leadership|perseverance|retribution|aerotheurge|geomancer|huntsman|hydrosophist|necromancer|polymorph|pyrokinetic|scoundrel|summoning|warfare|sourcery)\\./,\n  },\n  {\n    header: 'Stats',\n    regex: /^\\+[\\d.]+%? (initiative|critical chance|accuracy|damage|movement speed|lifesteal|maximum vitality|dodge chance)\\./,\n  },\n  {\n    header: 'Resistances',\n    regex: /^\\+\\d+% ((water|fire|air|earth|poison|physical|piercing) resistance|to elemental resistances)\\./,\n  },\n  {\n    header: 'Summons',\n    regex: /^\\+[\\d.]+%? summon \\w+( \\w+)?\\./,\n  },\n  {\n    header: 'Embodiments',\n    regex: /^\\+\\d+ (force|entropy|form|inertia|life)\\./,\n  },\n  {\n    header: 'Predator',\n    regex: /predator/,\n  },\n  {\n    header: 'Voracity',\n    regex: /voracity/,\n  },\n  {\n    header: 'Elementalist',\n    regex: /elementalist/,\n  },\n];\n\nfunction collectModifiers(state) {\n  const valueModifiers = {};\n  const textModifiers = [];\n\n  function addModifier(line) {\n    line\n      .split('\\n» ')\n      .map((s) => s.trim())\n      .forEach((modifier) => {\n        let match = modifier.match(VALUE_MODIFIER_REGEX);\n        if (match) {\n          const description = match[2];\n          const value = Number(match[1]);\n          valueModifiers[description] = (valueModifiers[description] || 0) + value;\n        } else {\n          textModifiers.push(modifier);\n        }\n      });\n  }\n\n  for (let nodeId in state.nodes) {\n    let [cluster, index] = nodeId.split('.');\n\n    const node = CLUSTERS[cluster].nodes[index];\n    const subnode = state.nodes[nodeId];\n\n    const modifier = node.description.trim();\n\n    if (modifier) addModifier(modifier);\n    if (subnode != -1) {\n      addModifier(node.subnodes[subnode]);\n    }\n  }\n\n  const modifiers = [];\n\n  for (let description of Object.keys(valueModifiers)) {\n    let value = valueModifiers[description];\n    modifiers.push(`+${Math.round(value * 10) / 10}${description}`);\n  }\n\n  modifiers.push(...textModifiers);\n\n  return modifiers;\n}\n\nexport function Overview() {\n  const { state } = useContext(CalculatorContext);\n\n  const points = [];\n  for (let embodiment of EMBODIMENT_NAMES) {\n    points.push(<div className={`point ${embodiment}`}>{state.points[embodiment]}</div>);\n  }\n\n  const modifiers = collectModifiers(state);\n  let modifiersByCategory = categories.map((c) => []);\n  const otherModifiers = [];\n\n  for (let modifier of modifiers) {\n    let hasCategory = false;\n\n    for (let i = 0; i < categories.length; i++) {\n      const category = categories[i];\n\n      if (modifier.toLowerCase().match(category.regex)) {\n        hasCategory = true;\n        modifiersByCategory[i].push(modifier);\n        break;\n      }\n    }\n\n    if (!hasCategory) {\n      otherModifiers.push(modifier);\n    }\n  }\n\n  const categoryElements = [];\n  for (let i = 0; i < categories.length; i++) {\n    const category = categories[i];\n\n    if (modifiersByCategory[i].length) {\n      categoryElements.push(\n        <div className=\"category\">\n          <div className=\"category-header\">{category.header}:</div>\n          {modifiersByCategory[i].map((m) => (\n            <div>{m}</div>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  if (otherModifiers.length) {\n    categoryElements.push(\n      <div className=\"category\">\n        <div className=\"category-header\">Other bonuses:</div>\n        {otherModifiers.map((m) => (\n          <div>{m}</div>\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"overview-container\">\n      <div className=\"overview\">\n        <div className=\"total-points points\">\n          <div className=\"points-name\">Available Ascension:</div> {points}\n        </div>\n        <div className=\"points-used\">Points used: {Object.keys(state.nodes).length}</div>\n        <div className=\"search-header\">Search:</div>\n        <SearchBox />\n\n        <div className=\"description\">\n          <div className=\"description-title\">Bonuses overview:</div>\n          {categoryElements}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport ReactTooltip from 'react-tooltip';\nimport { CalculatorProvider } from './state/CalculatorContext';\nimport { EMBODIMENT_NAMES } from './dataset';\nimport { Embodiment } from './components/Embodiment';\nimport { Overview } from './components/Overview';\nimport { HashManager } from './state/HashManager';\n\nfunction App() {\n  return (\n    <CalculatorProvider>\n      <HashManager />\n      <div className=\"calculator\">\n        <div className=\"embodiments\">\n          {EMBODIMENT_NAMES.map((embodiment) => (\n            <Embodiment name={embodiment} />\n          ))}\n        </div>\n        <Overview />\n      </div>\n      <ReactTooltip className=\"tooltip\" effect=\"solid\" html={true} multiline={true} />\n    </CalculatorProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}